/*
 * If not stated otherwise in this file or this component's LICENSE file the
 * following copyright and licenses apply:
 *
 * Copyright 2024 Metrological
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#pragma once

{{COMRPC_INTERFACE_INCLUDES}}

namespace Thunder {
namespace Plugin {
~INDENT_INCREASE~
    SERVICE_REGISTRATION({{PLUGIN_NAME}}Implementation, 1, 0)

    class {{PLUGIN_NAME}}Implementation : public {{OOP_INHERITED_CLASS}} {
    public:
~INDENT_INCREASE~
        {{PLUGIN_NAME}}Implementation(const {{PLUGIN_NAME}}Implementation&) = delete;
        {{PLUGIN_NAME}}Implementation& operator=(const {{PLUGIN_NAME}}Implementation&) = delete;

        {{PLUGIN_NAME}}Implementation()
        ~INDENT_INCREASE~
        :{{INTERFACE_CONSTRUCTOR}} _test(0)
        ~INDENT_DECREASE~
        {   
        }
        ~{{PLUGIN_NAME}}Implementation() override = default;

~INDENT_DECREASE~
    private:
    
~INDENT_INCREASE~
    {{CONFIG_CLASS}}
~INDENT_DECREASE~

    public:
~INDENT_INCREASE~

        BEGIN_INTERFACE_MAP({{PLUGIN_NAME}}Implementation)
        {{INTERFACE_ENTRY}}
        END_INTERFACE_MAP
    
        // Implement methods from the interface
        {{INHERITED_METHOD}}
~INDENT_DECREASE~
    private:
~INDENT_INCREASE~
        // Add data members, for example: (Core::CriticalSection, std::vector<INTERFACE*>..)
        uint32_t _test;
~INDENT_DECREASE~
    };
~INDENT_DECREASE~
} // Plugin
} // Thunder