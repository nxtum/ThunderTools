/*
 * If not stated otherwise in this file or this component's LICENSE file the
 * following copyright and licenses apply:
 *
 * Copyright 2024 Metrological
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#pragma once
~INDENT_RESET~
{{JSONRPC_INTERFACE_INCLUDES}}
{{COMRPC_INTERFACE_INCLUDES}}

namespace Thunder {
namespace Plugin {
~INDENT_INCREASE~

    class {{PLUGIN_NAME}} : public {{INHERITED_CLASS}} {
    public:
~INDENT_INCREASE~
    {{PLUGIN_NAME}}(const {{PLUGIN_NAME}}&) = delete;
    {{PLUGIN_NAME}} &operator=(const {{PLUGIN_NAME}}&) = delete;
    {{PLUGIN_NAME}}() {}
    ~{{PLUGIN_NAME}} override {}
~INDENT_DECREASE~

    private:
~INDENT_INCREASE~

    {{CONFIG_CLASS}}
    {{JSONRPC_EVENT}}
~INDENT_DECREASE~
    public:
~INDENT_INCREASE~

    // Inherited Methods
    const string Initialize(PluginHost::IShell* service) override;
    void Deinitialize(PluginHost::IShell* service) override;
    string Information() const override;
    {{INHERITED_METHOD}}
    // Plugin Methods
    {{PLUGIN_METHOD}}

    BEGIN_INTERFACE_MAP({{PLUGIN_NAME}})
    {{INTERFACE_ENTRY}}
    {{INTERFACE_AGGREGATE}}
    END_INTERFACE_MAP
~INDENT_DECREASE~
    private:
~INDENT_INCREASE~
    // Include the correct member variables for your plugin:
    // Note this is only an example, you are responsible for adding the correct members:
    uint32_t _connectionId;
~INDENT_DECREASE~
    };
~INDENT_DECREASE~
}
}
